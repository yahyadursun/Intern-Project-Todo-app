{"ast":null,"code":"// frontend/src/services/todoService.ts\nimport axios from 'axios';\nimport { getCurrentUser } from './authService';\nimport { v4 as uuidv4 } from 'uuid'; // UUID'yi import edin\n\nconst API_URL = 'http://localhost:3000/todo';\nconst authHeader = () => {\n  const user = getCurrentUser();\n  if (user && user.accessToken) {\n    return {\n      Authorization: 'Bearer ' + user.accessToken\n    };\n  } else {\n    return {};\n  }\n};\nexport const createTodo = async todo => {\n  // UUID oluşturun, eğer todo.id yoksa\n  if (!todo.id) {\n    todo.id = uuidv4();\n  }\n  return axios.post(API_URL, todo, {\n    headers: authHeader()\n  });\n};\nexport const getTodos = async () => {\n  return axios.get(API_URL, {\n    headers: authHeader()\n  });\n};\nexport const updateTodo = async (id, todo) => {\n  return axios.put(`${API_URL}/${id}`, todo, {\n    headers: authHeader()\n  });\n};\nexport const deleteTodo = async id => {\n  return axios.delete(`${API_URL}/${id}`, {\n    headers: authHeader()\n  });\n};","map":{"version":3,"names":["axios","getCurrentUser","v4","uuidv4","API_URL","authHeader","user","accessToken","Authorization","createTodo","todo","id","post","headers","getTodos","get","updateTodo","put","deleteTodo","delete"],"sources":["C:/Users/yahya/OneDrive/Masaüstü/Intern-Project-Todo-app/frontend/src/components/services/todoService.ts"],"sourcesContent":["// frontend/src/services/todoService.ts\r\nimport axios from 'axios';\r\nimport { getCurrentUser } from './authService';\r\nimport { v4 as uuidv4 } from 'uuid'; // UUID'yi import edin\r\n\r\nconst API_URL = 'http://localhost:3000/todo';\r\n\r\nconst authHeader = () => {\r\n  const user = getCurrentUser();\r\n  if (user && user.accessToken) {\r\n    return { Authorization: 'Bearer ' + user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport const createTodo = async (todo: any) => {\r\n  // UUID oluşturun, eğer todo.id yoksa\r\n  if (!todo.id) {\r\n    todo.id = uuidv4();\r\n  }\r\n  return axios.post(API_URL, todo, { headers: authHeader() });\r\n};\r\n\r\nexport const getTodos = async () => {\r\n  return axios.get(API_URL, { headers: authHeader() });\r\n};\r\n\r\nexport const updateTodo = async (id: string, todo: any) => {\r\n  return axios.put(`${API_URL}/${id}`, todo, { headers: authHeader() });\r\n};\r\n\r\nexport const deleteTodo = async (id: string) => {\r\n  return axios.delete(`${API_URL}/${id}`, { headers: authHeader() });\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM,CAAC,CAAC;;AAErC,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,IAAI,GAAGL,cAAc,CAAC,CAAC;EAC7B,IAAIK,IAAI,IAAIA,IAAI,CAACC,WAAW,EAAE;IAC5B,OAAO;MAAEC,aAAa,EAAE,SAAS,GAAGF,IAAI,CAACC;IAAY,CAAC;EACxD,CAAC,MAAM;IACL,OAAO,CAAC,CAAC;EACX;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,IAAS,IAAK;EAC7C;EACA,IAAI,CAACA,IAAI,CAACC,EAAE,EAAE;IACZD,IAAI,CAACC,EAAE,GAAGR,MAAM,CAAC,CAAC;EACpB;EACA,OAAOH,KAAK,CAACY,IAAI,CAACR,OAAO,EAAEM,IAAI,EAAE;IAAEG,OAAO,EAAER,UAAU,CAAC;EAAE,CAAC,CAAC;AAC7D,CAAC;AAED,OAAO,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,OAAOd,KAAK,CAACe,GAAG,CAACX,OAAO,EAAE;IAAES,OAAO,EAAER,UAAU,CAAC;EAAE,CAAC,CAAC;AACtD,CAAC;AAED,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAOL,EAAU,EAAED,IAAS,KAAK;EACzD,OAAOV,KAAK,CAACiB,GAAG,CAAC,GAAGb,OAAO,IAAIO,EAAE,EAAE,EAAED,IAAI,EAAE;IAAEG,OAAO,EAAER,UAAU,CAAC;EAAE,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,MAAMa,UAAU,GAAG,MAAOP,EAAU,IAAK;EAC9C,OAAOX,KAAK,CAACmB,MAAM,CAAC,GAAGf,OAAO,IAAIO,EAAE,EAAE,EAAE;IAAEE,OAAO,EAAER,UAAU,CAAC;EAAE,CAAC,CAAC;AACpE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}