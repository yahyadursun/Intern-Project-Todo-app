{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yahya\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Intern-Project-Todo-app\\\\frontend\\\\src\\\\components\\\\Todo\\\\TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { createTodo, getTodos, updateTodo, deleteTodo } from '../services/todoService';\nimport TodoItem from './TodoItem';\nimport { getCurrentUser } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodoText, setNewTodoText] = useState('');\n  const user = getCurrentUser();\n  const userId = user ? user.userId : ''; // Kullanıcı ID'sini alın\n\n  useEffect(() => {\n    if (userId) {\n      fetchTodos();\n    }\n  }, [userId]);\n  const fetchTodos = async () => {\n    try {\n      console.log('Fetching todos...');\n      const response = await getTodos(userId);\n      console.log('Todos fetched:', response.data);\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const handleCreateTodo = async e => {\n    e.preventDefault();\n    if (!userId) {\n      console.error('No user ID found');\n      return;\n    }\n    console.log('Creating todo with text:', newTodoText);\n    try {\n      await createTodo({\n        text: newTodoText,\n        isCompleted: false,\n        userId\n      });\n      setNewTodoText('');\n      fetchTodos();\n    } catch (error) {\n      console.error('Error creating todo:', error);\n    }\n  };\n  const handleToggleTodo = async (id, isCompleted) => {\n    if (!userId) {\n      console.error('No user ID found');\n      return;\n    }\n    console.log('Toggling todo with id:', id);\n    try {\n      const todo = todos.find(todo => todo.id === id);\n      if (todo) {\n        await updateTodo(id, {\n          text: todo.text,\n          isCompleted: !isCompleted,\n          userId,\n          expireDate: todo.expireDate\n        });\n        fetchTodos();\n      }\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    if (!userId) {\n      console.error('No user ID found');\n      return;\n    }\n    console.log('Deleting todo with id:', id);\n    try {\n      await deleteTodo(id, userId);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodoText,\n        onChange: e => setNewTodoText(e.target.value),\n        placeholder: \"Enter new todo\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        onToggle: handleToggleTodo,\n        onDelete: handleDeleteTodo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"3/Y/b38Y9KELca8/Gv/M4Qx7Zi8=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","createTodo","getTodos","updateTodo","deleteTodo","TodoItem","getCurrentUser","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","newTodoText","setNewTodoText","user","userId","fetchTodos","console","log","response","data","error","handleCreateTodo","e","preventDefault","text","isCompleted","handleToggleTodo","id","todo","find","expireDate","handleDeleteTodo","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","map","onToggle","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/yahya/OneDrive/Masaüstü/Intern-Project-Todo-app/frontend/src/components/Todo/TodoList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { createTodo, getTodos, updateTodo, deleteTodo } from '../services/todoService';\r\nimport TodoItem from './TodoItem';\r\nimport { getCurrentUser } from '../services/authService';\r\n\r\ninterface Todo {\r\n  id: string;\r\n  text: string;\r\n  isCompleted: boolean;\r\n  expireDate?: string;\r\n}\r\n\r\nconst TodoList: React.FC = () => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n\r\n  const user = getCurrentUser();\r\n  const userId = user ? user.userId : ''; // Kullanıcı ID'sini alın\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchTodos();\r\n    }\r\n  }, [userId]);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      console.log('Fetching todos...');\r\n      const response = await getTodos(userId);\r\n      console.log('Todos fetched:', response.data);\r\n      setTodos(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching todos:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateTodo = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      console.error('No user ID found');\r\n      return;\r\n    }\r\n    console.log('Creating todo with text:', newTodoText);\r\n    try {\r\n      await createTodo({ text: newTodoText, isCompleted: false, userId });\r\n      setNewTodoText('');\r\n      fetchTodos();\r\n    } catch (error) {\r\n      console.error('Error creating todo:', error);\r\n    }\r\n  };\r\n\r\n  const handleToggleTodo = async (id: string, isCompleted: boolean) => {\r\n    if (!userId) {\r\n      console.error('No user ID found');\r\n      return;\r\n    }\r\n    console.log('Toggling todo with id:', id);\r\n    try {\r\n      const todo = todos.find((todo) => todo.id === id);\r\n      if (todo) {\r\n        await updateTodo(id, { text: todo.text, isCompleted: !isCompleted, userId, expireDate: todo.expireDate });\r\n        fetchTodos();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating todo:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = async (id: string) => {\r\n    if (!userId) {\r\n      console.error('No user ID found');\r\n      return;\r\n    }\r\n    console.log('Deleting todo with id:', id);\r\n    try {\r\n      await deleteTodo(id, userId);\r\n      fetchTodos();\r\n    } catch (error) {\r\n      console.error('Error deleting todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Todo List</h2>\r\n      <form onSubmit={handleCreateTodo}>\r\n        <input\r\n          type=\"text\"\r\n          value={newTodoText}\r\n          onChange={(e) => setNewTodoText(e.target.value)}\r\n          placeholder=\"Enter new todo\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Todo</button>\r\n      </form>\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            onToggle={handleToggleTodo}\r\n            onDelete={handleDeleteTodo}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}